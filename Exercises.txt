TESTED

1. Create a SQL statement to list all managers and their titles.

SELECT CONCAT(e.first_name, ' ', e.last_name) AS department_manager, title 
FROM employees e 
INNER JOIN dept_manager dm ON dm.emp_no = e.emp_no
LEFT JOIN titles t ON t.emp_no = dm.emp_no;

========================================================================================
TESTED

2. Create a SQL statement to show the salary of all employees and their department 
name.

SELECT CONCAT(first_name, ' ',last_name) AS full_name, s.salary, d.dept_name
FROM employees e
LEFT JOIN salaries s ON e.emp_no = s.emp_no
LEFT JOIN dept_emp de ON e.emp_no = de.emp_no
LEFT JOIN departments d ON de.dept_no = d.dept_no;

========================================================================================
TESTED

3. Create a SQL statement to show the hire date and birth date who belongs to HR 
department 

SELECT dept_name, hire_date, birth_date
FROM employees e
INNER JOIN dept_manager dm ON e.emp_no = dm.emp_no
INNER JOIN departments d ON dm.dept_no = d.dept_no
WHERE dept_name = "Human Resources"

UNION

SELECT dept_name, hire_date, birth_date 
FROM employees e
INNER JOIN dept_emp de ON e.emp_no = de.emp_no
INNER JOIN departments d ON de.dept_no = d.dept_no
WHERE dept_name = "Human Resources";
========================================================================================
TESTED

4. Create a SQL statement to show all departments and their department’s managers.

SELECT d.dept_name, CONCAT(e.first_name," ",e.last_name) AS department_manager
FROM departments d 
LEFT JOIN dept_manager dm ON dm.dept_no = d.dept_no
LEFT JOIN employees e ON e.emp_no = dm.emp_no;


===========================================================================================
TESTED

5. Create a SQL statement to show a list of HR’s employees who were hired after 1986

SELECT CONCAT(first_name, ' ', last_name) AS full_name, dept_name, hire_date
FROM employees e
INNER JOIN dept_emp de ON de.emp_no= e.emp_no
INNER JOIN departments d ON d.dept_no= de.dept_no
WHERE dept_name = 'Human Resources'
AND YEAR(e.hire_date)> '1986'


========================================================================================
TESTED

6.Create a SQL statement to increase any employee’s salary up to 2%. Assume the 
employee has just phoned in with his/her last name.

DELIMITER $$
CREATE PROCEDURE salary_increase(last_name VARCHAR(30))
BEGIN
SELECT e.last_name, e.emp_no, s.salary AS current_salary, s.salary*1.02 AS new_salary
FROM employees e
LEFT JOIN salaries s on e.emp_no = s.emp_no
WHERE e.last_name = last_name;
END $$
DELIMITER;

CALL salary_increase('last_name');

======================================================================================== 

7. Create a SQL statement to delete employee’s record who belongs to marketing 
department and name start with A.

CREATE TEMPORARY TABLE marketing_dept( 

SELECT CONCAT(e.first_name,' ', e.last_name)AS full_name, d.dept_name 
FROM employees e
LEFT JOIN dept_emp de ON de.emp_no = e.emp_no
LEFT JOIN departments d ON d.dept_no = de.dept_no
LEFT JOIN dept_manager dm ON dm.dept_no = d.dept_no; 

DELETE * FROM marketing_dept
WHERE d.dept_name = 'Marketing' 
AND e.first_name LIKE "A%";

 
CREATE TEMPORARY TABLE marketing_na (
SELECT d.*, e.*
FROM employees e
LEFT JOIN dept_emp de ON de.emp_no = e.emp_no
LEFT JOIN dept_manager dm ON dm.emp_no = e.emp_no
LEFT JOIN departments d ON d.dept_no = de.dept_no OR d.dept_no = dm.dept_no
);

DELETE FROM marketing_na
WHERE mn.dept_name = 'Marketing' AND mn.first_name LIKE 'A%';

 

============================================================================================
TESTED
8. Create a database view to list the full names of all departments’ managers, and their 
salaries.

CREATE VIEW manager_sal AS
SELECT CONCAT(e.first_name, ' ', e.last_name) AS full_name, d.dept_name, s.salary 
FROM dept_manager dm 
INNER JOIN employees e ON dm.emp_no = e.emp_no 
INNER JOIN departments d ON dm.dept_no = d.dept_no 
INNER JOIN salaries s ON dm.emp_no = s.emp_no;

SELECT * FROM manager_sal;

========================================================================================
TESTED

9. Create a database view to list all departments and their department’s managers, who 
were hired between 1980 and 1990. 

CREATE VIEW manager_depts AS

SELECT d.dept_name, CONCAT(e.first_name, ' ', e.last_name) AS 
department_manager, YEAR(e.hire_date) AS year_hired 
FROM dept_manager dm 
INNER JOIN employees e ON dm.emp_no = e.emp_no 
INNER JOIN departments d ON dm.dept_no = d.dept_no 
WHERE YEAR(e.hire_date) BETWEEN '1980' AND '1990';

SELECT * FROM manager_depts;


========================================================================================
TESTED

10. Create a SQL statement to increase salaries of all department’s managers up to 10% 
who are working since 1990.  

CREATE TEMPORARY TABLE managers_inc(

select CONCAT(e.first_name, ' ', e.last_name) AS name, d.dept_name, e.hire_date as hired, s.salary * 1.1 AS new_salary
From employees e
left join dept_manager dm on dm.emp_no = e.emp_no
left join departments d on d.dept_no = dm.dept_no
left join salaries s on s.emp_no = e.emp_no
Where year(hire_date)>=1990);

select * from managers_inc;






























































































































































































































































































































































































 






















































   
